name: Build Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  lint-and-test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: packetcoders/action-setup-cache-python-poetry@main
      id: setup-python
      with:
        python-version: ${{ matrix.python-version }}
        poetry-version: "1.5.1"
        cache: poetry
      
    - name: running lint
      run: poetry run task lint
    
    - name: running all tests
      run: poetry run task test

  tox:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      id: setup-python
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Load cached tox
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .tox
        key: tox-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock', 'tox.ini') }}
        restore-keys: |
          tox-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
    - name: Test with tox
      run: python -m tox

  push-image:
    runs-on: ubuntu-latest
    name: Docker Image Push
    needs:
      - lint-and-test
      - tox
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2

        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Latest Image
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app_tcc:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/app_tcc:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/app_tcc:buildcache,mode=max
