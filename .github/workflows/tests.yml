# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Application Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10.5
      uses: actions/setup-python@v3
      with:
        python-version: "3.10.5"
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    #----------------------------------------------
    # install your root project, if required
    #----------------------------------------------
    - name: Install project
      run: poetry install --no-interaction
    #----------------------------------------------
    #              run test suite
    #----------------------------------------------
    - name: Run tests
      run: |
        source .venv/bin/activate
        pytest tests/
        coverage report
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2.1.6
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/pr-deployer.yml') }}
    # - name: Install poetry dependencies
    #   run: |
    #     pip install poetry
    #     poetry config virtualenvs.create false &&
    #     poetry install --no-dev

    # - name: Lint with flake8
    #   run: |
    #     make lint
    # - name: Test with unittest
    #   run: |
    #     make test
