# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Application Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.10.5"

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache.outputs.key }}
      cache-path: ${{ steps.cache.outputs.path }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v3
      id: setup-python
      with:
        python-version: ${{ env.PYTHON_VERSION }}

      #  -----  install & configure poetry  -----
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: false
        installer-parallel: true

    - name: Creating cache key
      id: cache
      env:
        CACHE_KEY: venv-${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        CACHE_PATH: /usr/local/lib/python3.10/site-packages
      run: |
        echo "::set-output name=key::${{ env.CACHE_KEY }}"
        echo "::set-output name=path::${{ env.CACHE_PATH }}"

      # load cached venv if cache exists
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.cache.outputs.path }}
        key: ${{ steps.cache.outputs.key }}

      # install dependencies if cache does not exist
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

  tests:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v3
      id: setup-python
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: false
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ${{ needs.install-dependencies.outputs.cache-path }}
        key: ${{ needs.install-dependencies.outputs.cache-key }}

    - name: load packages
      run: source .venv/bin/activate
    - name: lint
      run: make lint
